What is encapsulation in Java?,
a. The process of combining data and methods into a single unit T,
b. The process of breaking down a class into smaller units F,
c. The process of defining a superclass F,
d. The process of creating objects F,
What is the difference between an abstract class and an interface in Java?,
a. Abstract classes cannot have abstract methods F,
b. Interfaces can have variables abstract classes cannot T,
c. Abstract classes can be instantiated interfaces cannot F,
d. Interfaces cannot have methods F,
What is method overloading in Java?,
a. The process of defining multiple methods with the same name in a class T,
b. The process of overriding methods in a subclass F,
c. The process of creating abstract methods F,
d. The process of hiding variables in a class F,
What is the purpose of the "final" keyword in Java?,
a. To indicate that a method cannot be overridden F,
b. To indicate that a class cannot be extended F,
c. To indicate that a variable's value cannot be changed T,
d. All of the above F,
What is the difference between "extends" and "implements" in Java?,
a. "Extends" is used for classes "implements" is used for interfaces T,
b. "Extends" is used for interfaces "implements" is used for classes F,
c. They are interchangeable F,
d. Both are used for inheritance F,
What is a constructor chaining in Java?,
a. Calling a method from a constructor F,
b. Calling another constructor within a constructor T,
c. Creating multiple constructors in a class F,
d. Breaking the constructor chain F,
What is the purpose of the "super()" statement in a constructor?,
a. To call the superclass constructor T,
b. To create an instance of the superclass F,
c. To initialize the subclass F,
d. To call a method in the superclass F,
What is dynamic method dispatch in Java?,
a. The process of calling a static method F,
b. The process of selecting a method at runtime T,
c. The process of overriding a method F,
d. The process of calling a private method F,
What is the concept of polymorphic references in Java?,
a. References to different data types F,
b. References that can change their type at runtime F,
c. References that can refer to objects of different classes in a hierarchy T,
d. References that cannot be null F,
How is method overriding different from method overloading in Java?,
a. Method overriding is for static methods method overloading is for instance methods F,
b. Method overriding involves providing a different implementation in the subclass T,
c. Method overloading involves defining multiple methods with the same name in a class F,
d. Method overloading is for abstract methods method overriding is for concrete methods F,
END


