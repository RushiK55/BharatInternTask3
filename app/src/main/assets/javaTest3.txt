What is an exception in Java?,
a. An error in the program F,
b. An unexpected event that disrupts the normal flow of a program T,
c. A warning message F,
d. A runtime error F,
What is the purpose of the "try" "catch" and "finally" blocks in Java?,
a. "Try" handles normal program execution "catch" handles exceptions "finally" always executes T,
b. "Try" handles exceptions "catch" handles normal program execution "finally" always executes F,
c. "Try" and "catch" are used together "finally" is optional F,
d. "Try" and "finally" are used together "catch" is optional F,
What is the difference between checked and unchecked exceptions in Java?,
a. Checked exceptions are checked at compile-time unchecked exceptions are checked at runtime T,
b. Checked exceptions are checked at runtime unchecked exceptions are checked at compile-time F,
c. Checked exceptions are always fatal unchecked exceptions are not F,
d. Checked exceptions are always runtime errors unchecked exceptions are compile-time errors F,
What is the purpose of the "throw" keyword in Java?,
a. To catch exceptions F,
b. To declare exceptions in a method signature F,
c. To explicitly throw an exception T,
d. To create custom exception classes F,
What is the role of the "throws" clause in a method signature?,
a. It declares that the method can throw exceptions T,
b. It catches exceptions within the method F,
c. It specifies the type of exception the method can handle F,
d. It indicates the end of the method F,
What is the difference between "finally" and "finalize" in Java?,
a. "Finally" is used in exception handling "finalize" is a method called by the garbage collector T,
b. "Finally" is a method called by the garbage collector "finalize" is used in exception handling F,
c. They are synonyms F,
d. Both are used in exception handling F,
How can you create a custom exception class in Java?,
a. Extend the "Exception" class T,
b. Implement the "Exception" interface F,
c. Use the "throws" keyword F,
d. Use the "throw" keyword F,
What is the purpose of the "getMessage()" method in the "Exception" class?,
a. To get the error message F,
b. To display the error message F,
c. To retrieve the error message from the exception object T,
d. To handle exceptions F,
What is the "finally" block used for in exception handling?,
a. To catch exceptions F,
b. To always execute code whether an exception occurs or not T,
c. To declare exceptions F,
d. To specify the type of exception F,
What is the difference between the "printStackTrace()" and "getMessage()" methods in exception handling?,
a. They are the same F,
b. "printStackTrace()" prints the stack trace "getMessage()" retrieves the error message T,
c. "getMessage()" prints the stack trace "printStackTrace()" retrieves the error message F,
d. Both print the stack trace F,
END
